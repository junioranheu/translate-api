// Criar nova API;
dotnet new webapi -n NomeDoProjeto.API -controllers

// Criar uma biblioteca de classes;
dotnet new classlib -n NomeDoProjeto.Application
dotnet new classlib -n NomeDoProjeto.Domain
dotnet new classlib -n NomeDoProjeto.Infrastructure
dotnet new classlib -n NomeDoProjeto.Utils

// Executar aplicação;
cd NomeDoProjeto.API
dotnet build
dotnet run

// Adicionar referências entre as camadas;
API > Application, Domain, Infrastructure
dotnet add reference ../NomeDoProjeto.Application/NomeDoProjeto.Application.csproj ../NomeDoProjeto.Domain/NomeDoProjeto.Domain.csproj ../NomeDoProjeto.Infrastructure/NomeDoProjeto.Infrastructure.csproj

Application > Domain, Infrastructure
dotnet add reference ../NomeDoProjeto.Domain/NomeDoProjeto.Domain.csproj ../NomeDoProjeto.Infrastructure/NomeDoProjeto.Infrastructure.csproj

Domain > Utils
dotnet add reference ../NomeDoProjeto.Utils/NomeDoProjeto.Utils.csproj

Infrastructure > Domain
dotnet add reference ../NomeDoProjeto.Domain/NomeDoProjeto.Domain.csproj

UnitTests > Application, Infrastructure 
dotnet add reference ../NomeDoProjeto.Application/NomeDoProjeto.Application.csproj ../NomeDoProjeto.Infrastructure/NomeDoProjeto.Infrastructure.csproj

// Tutorial arquitetura CQRS;
https://balta.io/blog/aspnet-core-cqrs-mediator

// Tutorial docker;
- É necessário entrar na pasta do docker-compose
buildar aplicação: docker-compose up -d --build
listar todos os containeres: docker container ps